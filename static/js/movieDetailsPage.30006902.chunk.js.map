{"version":3,"file":"static/js/movieDetailsPage.30006902.chunk.js","mappings":"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","sources":["components/MovieCard/MovieCard.styled.jsx","components/MovieCard/MovieCard.jsx","components/CastCard/CastCard.jsx","components/ReviewCard/ReviewCard.jsx","pages/MovieDetailsPage.jsx","services/movies-api.jsx","../node_modules/@babel/runtime/helpers/esm/defineProperty.js","../node_modules/@babel/runtime/helpers/esm/objectSpread2.js"],"sourcesContent":["import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const WrappMovie = styled.div`\n  display: flex;\n`;\n\nexport const ImageMovie = styled.img`\n  margin-right: 30px;\n`;\n\nexport const LinkButton = styled(Link)`\n  display: inline-block;\n  padding: 8px 10px;\n  font-weight: 400;\n  font-size: 18px;\n  line-height: 24px;\n  color: #d1527c;\n  text-decoration: none;\n  cursor: pointer;\n`;\nexport const MovieTitle = styled.h2`\n  color: #d1527c;\n`;\n\nexport const GenresList = styled.li`\n  list-style: none;\n  margin-left: -40px;\n`;\n\nexport const RouteLink = styled(Link)`\n  margin-right: 10px;\n  text-decoration: none;\n  color: black;\n  font-size: 15px;\n  color: #363853;\n\n  &:hover {\n    color: #d1527c;\n  }\n`;\n\nexport const MovieInput = styled.input`\n  width: 300px;\n  padding: 8px;\n  border: 1px solid black;\n  border-radius: 10px;\n  margin-right: 6px;\n  outline: none;\n  transition: border 250ms linear;\n  &:focus {\n    border: 1px solid #d1527c;\n  }\n`;\n\nexport const MovieSearchBtn = styled.button`\n  color: #fff;\n  padding: 8px 14px;\n  background-color: #d1527c;\n  box-shadow: 0px 5px 12px rgba(153, 60, 133, 0.753);\n  border-radius: 10px;\n  font-weight: 500;\n  font-size: 14px;\n  border: none;\n  text-align: center;\n`;\n","import React from 'react';\nimport {\n  MovieTitle,\n  WrappMovie,\n  ImageMovie,\n  GenresList,\n} from './MovieCard.styled';\n\nexport default function MovieCard({ movie }) {\n  return (\n    <WrappMovie>\n      <ImageMovie\n        src={`https://image.tmdb.org/t/p/w200${movie.poster_path}`}\n        alt={movie.title}\n      />\n      <div>\n        <MovieTitle>\n          {movie.title} ({movie.release_date.slice(0, 4)})\n        </MovieTitle>\n        <p>User score: {movie.vote_average * 10}%</p>\n        <h3>Overview</h3>\n        <p>{movie.overview}</p>\n        <h3>Genres</h3>\n        <ul>\n          {movie.genres.map(genre => (\n            <GenresList key={genre.name}>{genre.name}</GenresList>\n          ))}\n        </ul>\n      </div>\n    </WrappMovie>\n  );\n}\n","import propTypes from 'prop-types';\n\nexport default function CastCard({ casts }) {\n  return (\n    <>\n      {casts.map(({ cast_id, name, character, profile_path }) => (\n        <li key={cast_id}>\n          <img alt=\"\" src={`https://image.tmdb.org/t/p/w200${profile_path}`} />\n          <p>{name}</p>\n          <p>Character: {character}</p>\n        </li>\n      ))}\n    </>\n  );\n}\n\nCastCard.propTypes = {\n  casts: propTypes.arrayOf(propTypes.object).isRequired,\n};\n","import propTypes from 'prop-types';\n\nexport default function ReviewCard({ reviews }) {\n  return (\n    <ul>\n      {reviews.map(({ id, author, content }) => (\n        <li key={id}>\n          <p>Author: {author}</p>\n          <p>{content}</p>\n        </li>\n      ))}\n    </ul>\n  );\n}\n\nReviewCard.propTypes = {\n  reviews: propTypes.arrayOf(propTypes.object).isRequired,\n};\n","import { useState, useEffect } from 'react';\nimport {\n  useParams,\n  useRouteMatch,\n  useLocation,\n  Route,\n  Switch,\n} from 'react-router-dom';\n\nimport {\n  LinkButton,\n  RouteLink,\n} from '../components/MovieCard/MovieCard.styled';\n\nimport * as moviesAPI from '../services/movies-api';\nimport MovieCard from '../components/MovieCard/MovieCard';\nimport CastCard from '../components/CastCard/CastCard';\nimport ReviewCard from '../components/ReviewCard/ReviewCard';\n\nexport default function MovieDetailsPage() {\n  const { moviesId } = useParams();\n  const { url, path } = useRouteMatch();\n  const location = useLocation();\n  const [movie, setMovie] = useState(null);\n  const [cast, setCast] = useState(null);\n  const [review, setReview] = useState([]);\n\n  useEffect(() => {\n    moviesAPI.fetchDetailsMovie(moviesId).then(setMovie);\n    moviesAPI.fetchCastsMovie(moviesId).then(setCast);\n    moviesAPI.fetchReviewsMovie(moviesId).then(setReview);\n  }, [moviesId]);\n\n  return (\n    <>\n      <LinkButton to={location?.state?.from ?? '/'}>Go back</LinkButton>\n      {movie && (\n        <div>\n          <MovieCard movie={movie} />\n          <hr />\n          <h4>Additional information</h4>\n          <RouteLink\n            to={{\n              pathname: `${url}/cast`,\n              state: { ...location.state },\n            }}\n          >\n            Cast\n          </RouteLink>\n          <RouteLink\n            to={{\n              pathname: `${url}/reviews`,\n              state: { ...location.state },\n            }}\n          >\n            Reviews\n          </RouteLink>\n        </div>\n      )}\n\n      <hr />\n\n      <Switch>\n        <Route path={`${path}/cast`}>{cast && <CastCard casts={cast} />}</Route>\n\n        <Route path={`${path}/reviews`}>\n          {review.length === 0 ? (\n            <p>We don't have any reviews for this movie.</p>\n          ) : (\n            <ReviewCard reviews={review} />\n          )}\n        </Route>\n      </Switch>\n    </>\n  );\n}\n","import axios from 'axios';\n\nconst API_KEY = 'e993d78c8d5e0d9feb56b30fcf5cb0e3';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nexport const fetchTrendingMovies = async () => {\n  const { data } = await axios.get(`/trending/movie/day?api_key=${API_KEY}`);\n  return data.results;\n};\n\nexport async function fetchSearchMovies(query) {\n  const { data } = await axios.get(\n    `/search/movie?query=${query}&api_key=${API_KEY}&language=en-US&page=1&include_adult=false`,\n  );\n  return data.results;\n}\n\nexport async function fetchDetailsMovie(movieId) {\n  const { data } = await axios.get(\n    `/movie/${movieId}?api_key=${API_KEY}&language=en-US`,\n  );\n  return data;\n}\n\nexport async function fetchCastsMovie(movieId) {\n  const { data } = await axios.get(\n    `/movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`,\n  );\n  return data.cast;\n}\n\nexport async function fetchReviewsMovie(movieId) {\n  const { data } = await axios.get(\n    `/movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US`,\n  );\n  return data.results;\n}\n","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import defineProperty from \"./defineProperty.js\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n\n  return target;\n}"],"names":["WrappMovie","styled","ImageMovie","LinkButton","Link","MovieTitle","GenresList","RouteLink","MovieInput","MovieSearchBtn","MovieCard","movie","src","poster_path","alt","title","release_date","slice","vote_average","overview","genres","map","genre","name","CastCard","casts","cast_id","character","profile_path","ReviewCard","reviews","id","author","content","MovieDetailsPage","moviesId","useParams","useRouteMatch","url","path","location","useLocation","useState","setMovie","cast","setCast","review","setReview","useEffect","moviesAPI","then","to","state","from","pathname","length","API_KEY","axios","fetchTrendingMovies","data","results","fetchSearchMovies","query","fetchDetailsMovie","movieId","fetchCastsMovie","fetchReviewsMovie","_defineProperty","obj","key","value","Object","defineProperty","enumerable","configurable","writable","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","push","apply","_objectSpread2","target","i","arguments","source","forEach","getOwnPropertyDescriptors","defineProperties"],"sourceRoot":""}